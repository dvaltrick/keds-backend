// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using keds.Database;

namespace keds.Migrations
{
    [DbContext(typeof(KedsContext))]
    [Migration("20190113112009_respostas")]
    partial class respostas
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("keds.Models.Alternativa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("QuestaoId");

                    b.Property<string>("Texto");

                    b.Property<string>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("QuestaoId");

                    b.ToTable("Alternativas");
                });

            modelBuilder.Entity("keds.Models.Instituicao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Instituicoes");
                });

            modelBuilder.Entity("keds.Models.Prova", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Ano");

                    b.Property<Guid>("InstituicaoId");

                    b.Property<int>("Periodo");

                    b.Property<int>("Tempo");

                    b.HasKey("Id");

                    b.HasIndex("InstituicaoId");

                    b.ToTable("Provas");
                });

            modelBuilder.Entity("keds.Models.Questao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.Property<Guid>("ProvaId");

                    b.Property<string>("ValorCorreto");

                    b.HasKey("Id");

                    b.HasIndex("ProvaId");

                    b.ToTable("Questoes");
                });

            modelBuilder.Entity("keds.Models.Resposta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("QuestaoId");

                    b.Property<Guid>("SimuladoId");

                    b.Property<string>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("QuestaoId");

                    b.HasIndex("SimuladoId");

                    b.ToTable("Respostas");
                });

            modelBuilder.Entity("keds.Models.Simulado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Acetadas");

                    b.Property<DateTime>("Data");

                    b.Property<int>("Erradas");

                    b.Property<Guid>("ProvaId");

                    b.Property<int>("Puladas");

                    b.Property<int>("Questoes");

                    b.Property<Guid>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("ProvaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Simulados");
                });

            modelBuilder.Entity("keds.Models.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Login");

                    b.Property<string>("Nome");

                    b.Property<string>("Senha");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("keds.Models.Alternativa", b =>
                {
                    b.HasOne("keds.Models.Questao", "Questao")
                        .WithMany("Alternativas")
                        .HasForeignKey("QuestaoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("keds.Models.Prova", b =>
                {
                    b.HasOne("keds.Models.Instituicao", "Instituicao")
                        .WithMany("Provas")
                        .HasForeignKey("InstituicaoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("keds.Models.Questao", b =>
                {
                    b.HasOne("keds.Models.Prova", "Prova")
                        .WithMany()
                        .HasForeignKey("ProvaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("keds.Models.Resposta", b =>
                {
                    b.HasOne("keds.Models.Questao", "Questao")
                        .WithMany()
                        .HasForeignKey("QuestaoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("keds.Models.Simulado", "Simulado")
                        .WithMany("Respostas")
                        .HasForeignKey("SimuladoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("keds.Models.Simulado", b =>
                {
                    b.HasOne("keds.Models.Prova", "Prova")
                        .WithMany()
                        .HasForeignKey("ProvaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("keds.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
